-- TABELA PESSOA

CREATE TABLE `teste-app`.PESSOA (
ID_PESSOA INT NOT NULL AUTO_INCREMENT, 
CPF VARCHAR(14) NOT NULL,
NOME VARCHAR(80) NOT NULL,
PRIMARY KEY(ID_PESSOA)
);

-- ALTER TABLE `teste-app`.PESSOA MODIFY CPF VARCHAR(14) NOT NULL;

INSERT INTO `teste-app`.PESSOA 
(CPF, NOME) 
VALUES
('123.123.123-12', 'João da Silva');
INSERT INTO `teste-app`.PESSOA 
(CPF, NOME) 
VALUES
('456.456.456-01', 'José da Silva Júnior');

SELECT * FROM `teste-app`.PESSOA;

-- TABELA SALARIO

CREATE TABLE `teste-app`.SALARIO (
ID_SALARIO INT NOT NULL AUTO_INCREMENT, 
ID_PESSOA INT NOT NULL,
SALARIO DOUBLE(8, 2) DEFAULT 0.00, 
DATA_INICIO_VIGENCIA DATE NOT NULL, 	
DATA_FIM_VIGENCIA DATE,
PRIMARY KEY(ID_SALARIO),
FOREIGN KEY (ID_PESSOA) REFERENCES PESSOA(ID_PESSOA)
);

-- ALTER TABLE `teste-app`.SALARIO MODIFY DATA_FIM_VIGENCIA DATE;

INSERT INTO `teste-app`.SALARIO 
(ID_PESSOA, SALARIO, DATA_INICIO_VIGENCIA, DATA_FIM_VIGENCIA) 
VALUES
(1, 1000.00, '2017-5-1', '2018-1-1' );

INSERT INTO `teste-app`.SALARIO 
(ID_PESSOA, SALARIO, DATA_INICIO_VIGENCIA, DATA_FIM_VIGENCIA) 
VALUES
(1, 2150.00, '2018-11-01', NULL);

INSERT INTO `teste-app`.SALARIO 
(ID_PESSOA, SALARIO, DATA_INICIO_VIGENCIA, DATA_FIM_VIGENCIA) 
VALUES
(2, 1500.00, '2016-02-01', NULL);

SELECT * FROM `teste-app`.SALARIO 

-- Consulta SQL (banco Oracle) que retorne o Nome e Salário do CPF 123.123.123-12 em 01/06/2018.

SELECT P.NOME, S.SALARIO, P.CPF, DATA_INICIO_VIGENCIA
FROM `teste-app`.PESSOA P
INNER JOIN `teste-app`.SALARIO S
ON P.ID_PESSOA = S.ID_PESSOA
WHERE P.CPF = '123.123.123-12'
AND DATA_INICIO_VIGENCIA = STR_TO_DATE('01/06/2018','%d/%m/%Y');

-- Consulta SQL (banco Oracle) que retorne o Nome e Salário do CPF 123.123.123-12 em 01/05/2017. 

SELECT P.NOME, S.SALARIO, P.CPF, DATA_INICIO_VIGENCIA,STR_TO_DATE('01/05/2017','%d/%m/%Y')
FROM `teste-app`.PESSOA P
INNER JOIN `teste-app`.SALARIO S
ON P.ID_PESSOA = S.ID_PESSOA
WHERE P.CPF = '123.123.123-12'
AND DATA_INICIO_VIGENCIA = STR_TO_DATE('01/05/2017','%d/%m/%Y');

-- BENEFICIO

CREATE TABLE `teste-app`.BENEFICIO (
ID_BENEFICIO INT NOT NULL AUTO_INCREMENT, 
ID_PESSOA INT NOT NULL,
VALOR_BENEFICIO DOUBLE(8, 2) DEFAULT 0.00, 
PRIMARY KEY(ID_BENEFICIO),
FOREIGN KEY (ID_PESSOA) REFERENCES PESSOA(ID_PESSOA)
);

INSERT INTO `teste-app`.BENEFICIO 
(ID_PESSOA, VALOR_BENEFICIO) 
VALUES
(1, 500.00);
INSERT INTO `teste-app`.BENEFICIO 
(ID_PESSOA, VALOR_BENEFICIO) 
VALUES
(1, 635.00);
INSERT INTO `teste-app`.BENEFICIO 
(ID_PESSOA, VALOR_BENEFICIO) 
VALUES
(1, 200.00);
INSERT INTO `teste-app`.BENEFICIO 
(ID_PESSOA, VALOR_BENEFICIO) 
VALUES
(2, 500.00);
INSERT INTO `teste-app`.BENEFICIO 
(ID_PESSOA, VALOR_BENEFICIO) 
VALUES
(2, 635.00);

-- SELECT * FROM `teste-app`.BENEFICIO

SELECT P.ID_PESSOA, P.NOME, SUM(B.VALOR_BENEFICIO) TOTAL_BENEFICIOS
FROM `teste-app`.PESSOA P
INNER JOIN `teste-app`.SALARIO S
ON P.ID_PESSOA = S.ID_PESSOA
INNER JOIN `teste-app`.BENEFICIO B
ON P.ID_PESSOA = B.ID_PESSOA
WHERE S.DATA_FIM_VIGENCIA IS NULL
GROUP BY P.ID_PESSOA, P.NOME;

SELECT P.ID_PESSOA, P.NOME, S.SALARIO, TB.TOTAL_BENEFICIOS, TB.TOTAL_BENEFICIOS + S.SALARIO
FROM `teste-app`.PESSOA P
INNER JOIN `teste-app`.SALARIO S
ON P.ID_PESSOA = S.ID_PESSOA
INNER JOIN 
	(SELECT PE.ID_PESSOA, SUM(BE.VALOR_BENEFICIO) TOTAL_BENEFICIOS
		FROM `teste-app`.PESSOA PE
		INNER JOIN `teste-app`.SALARIO SA
		ON PE.ID_PESSOA = SA.ID_PESSOA
		INNER JOIN `teste-app`.BENEFICIO BE
		ON PE.ID_PESSOA = BE.ID_PESSOA
        WHERE SA.DATA_FIM_VIGENCIA IS NULL
		GROUP BY PE.ID_PESSOA, PE.NOME) TB
ON P.ID_PESSOA = TB.ID_PESSOA
WHERE S.DATA_FIM_VIGENCIA IS NULL;






